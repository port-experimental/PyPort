# PyPort Development TODO List


## Enhanced Retry Logic
- Implement exponential backoff algorithm with jitter
- Add configurable retry settings (max_retries, retry_delay, etc.)
- Support different retry strategies
- Add ability to customize retry conditions
- Respect Retry-After headers from the server
- Only retry idempotent requests by default
- Implement circuit breaker pattern for persistent errors
- Add hooks for custom retry handling
- Improve retry logging with detailed information
- Add retry statistics

## CI/CD and Tooling Improvements
- Fix GitHub Actions workflow
- Fix errored badge in README
- Redesign and refactor the local CI/CD utilities in @utilz/local_cicd
- Improve build and release automation
- Enhance code quality checks in CI pipeline

## Feature Enhancements
- Add context manager support for the client (with statement)
- Implement resource pooling for efficient client usage
- Add batch operations for bulk API calls
- Implement automatic request throttling to prevent rate limiting
- Add support for custom serializers/deserializers

## Testing Improvements
- Add more edge case tests for error conditions
- Implement integration tests against a mock API server
- Add performance tests for critical operations
- Implement property-based testing for API models
- Add load testing for concurrent operations

## Long-term Roadmap
- Configuration Management (environment variables, config files, etc.)
- API Versioning Support (version parameter, adapters for different versions)
- Async Support (AsyncPortClient, async methods, etc.)
